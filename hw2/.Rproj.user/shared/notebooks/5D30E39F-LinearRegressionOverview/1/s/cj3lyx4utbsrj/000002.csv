"0","# Apply m1 to validation data to generate prediction"
"0","# Point forecasts only "
"0","predict(m1, x_val) #R automatically reads TV variable only. "
"1","        3 "
"1","        4 "
"1","        6 "
"1","        7 "
"1","       10 "
"1","       11 "
"1","       14 "
"1","       22 "
"1","       23 "
"1","       24 "
"1","
"
"1"," 8.129047 "
"1","14.546741 "
"1"," 7.722864 "
"1","10.054833 "
"1","16.854817 "
"1","10.465795 "
"1","11.966283 "
"1","18.651580 "
"1"," 7.937902 "
"1","18.216725 "
"1","
"
"1","       33 "
"1","       39 "
"1","       45 "
"1","       48 "
"1","       53 "
"1","       57 "
"1","       61 "
"1","       63 "
"1","       65 "
"1","       67 "
"1","
"
"1","11.951948 "
"1"," 9.366711 "
"1"," 8.506559 "
"1","18.771046 "
"1","17.648069 "
"1"," 7.655963 "
"1"," 9.863688 "
"1","18.742374 "
"1","13.571902 "
"1"," 8.812391 "
"1","
"
"1","       68 "
"1","       73 "
"1","       77 "
"1","       85 "
"1","       86 "
"1","       88 "
"1","       93 "
"1","       94 "
"1","       96 "
"1","       97 "
"1","
"
"1","13.963749 "
"1"," 8.587795 "
"1"," 8.621246 "
"1","17.509489 "
"1","16.539428 "
"1","12.597062 "
"1","17.710191 "
"1","19.296695 "
"1","15.110619 "
"1","16.749687 "
"1","
"
"1","       98 "
"1","      100 "
"1","      103 "
"1","      104 "
"1","      108 "
"1","      114 "
"1","      116 "
"1","      120 "
"1","      121 "
"1","      122 "
"1","
"
"1","16.142802 "
"1","13.767825 "
"1","20.696832 "
"1","16.286161 "
"1","11.627001 "
"1","17.323122 "
"1","10.895871 "
"1"," 8.234177 "
"1","14.059321 "
"1"," 8.205505 "
"1","
"
"1","      123 "
"1","      127 "
"1","      128 "
"1","      131 "
"1","      133 "
"1","      137 "
"1","      143 "
"1","      144 "
"1","      147 "
"1","      156 "
"1","
"
"1","18.011244 "
"1"," 7.679857 "
"1","11.139581 "
"1"," 7.340574 "
"1"," 7.708528 "
"1"," 8.530452 "
"1","17.843993 "
"1","12.305566 "
"1","18.780603 "
"1"," 7.503047 "
"1","
"
"1","      159 "
"1","      168 "
"1","      175 "
"1","      177 "
"1","      178 "
"1","      183 "
"1","      186 "
"1","      189 "
"1","      198 "
"1","      200 "
"1","
"
"1"," 7.866223 "
"1","17.189321 "
"1","17.934786 "
"1","19.177229 "
"1","15.440344 "
"1"," 9.992711 "
"1","17.103306 "
"1","20.973992 "
"1","15.765291 "
"1","18.398313 "
"1","
"
"0","# Predicting the average value for given x "
"0","# Confidence intervals: Estimates Average y values "
"0","head(predict(m1, x_val, interval = ""confidence"", level = 0.95))"
"1","  "
"1","       fit"
"1","       lwr"
"1","       upr"
"1","
3 "
"1","  8.129047"
"1","  7.077477"
"1","  9.180618"
"1","
4 "
"1"," 14.546741"
"1"," 14.003679"
"1"," 15.089804"
"1","
6 "
"1","  7.722864"
"1","  6.623160"
"1","  8.822568"
"1","
7 "
"1"," 10.054833"
"1","  9.218485"
"1"," 10.891182"
"1","
10"
"1"," 16.854817"
"1"," 16.236131"
"1"," 17.473503"
"1","
11"
"1"," 10.465795"
"1","  9.671525"
"1"," 11.260065"
"1","
"
"0","# Store point prediction to a vector "
"0","pred1 <- predict(m1, x_val) "
"0",""
