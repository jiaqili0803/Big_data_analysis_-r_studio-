"0","### 1. get predict value (probability) for specific data point"
"0","new_data <- data.frame(gre=700, gpa=3.8, rank=2)"
"0","new_data$rank <- as.factor(new_data$rank)"
"0",""
"0","predict(log_model_1, newdata = new_data)  # without type=""response"" will get predicted log odds ration"
"1","          1 "
"1","
"
"1","-0.06309444 "
"1","
"
"0","predict(log_model_1, newdata = new_data, type=""response"")"
"1","        1 "
"1","
"
"1","0.4842316 "
"1","
"
"0","# we get predict value (probability) for specific data point"
"0",""
"0",""
"0","### 2. predict on test "
"0","pred <- predict(log_model_1, grad_test, type=""response"") # use test data"
"0","binary_pred <- ifelse(pred >= 0.5, 1, 0)"
"0",""
"0","library(gmodels)"
"2","Warning:"
"2"," package ‘gmodels’ was built under R version 4.1.3
"
"0","CrossTable(binary_pred, grad_test$admit) # compare"
"1","
"
"1"," "
"1","
"
"1","   Cell Contents
"
"1","|-------------------------|
"
"1","|                       N |
"
"1","| Chi-square contribution |
"
"1","|           N / Row Total |
"
"1","|           N / Col Total |
"
"1","|         N / Table Total |
"
"1","|-------------------------|
"
"1","
"
"1"," "
"1","
"
"1","Total Observations in Table: "
"1"," "
"1","100"
"1"," "
"1","
"
"1","
"
"1"," "
"1","
"
"1","            "
"1"," "
"1","|"
"1"," "
"1","grad_test$admit"
"1"," "
"1","
"
"1"," binary_pred"
"1"," | "
"1","        0"
"1"," | "
"1","        1"
"1"," | "
"1","Row Total"
"1"," | "
"1","
"
"1","-------------"
"1","|"
"1","-----------"
"1","|"
"1","-----------"
"1","|"
"1","-----------"
"1","|"
"1","
"
"1","           0"
"1"," | "
"1","       62"
"1"," | "
"1","       28"
"1"," | "
"1","       90"
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    0.114"
"1"," | "
"1","    0.221"
"1"," | "
"1","         "
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    0.689"
"1"," | "
"1","    0.311"
"1"," | "
"1","    0.900"
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    0.939"
"1"," | "
"1","    0.824"
"1"," | "
"1","         "
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    0.620"
"1"," | "
"1","    0.280"
"1"," | "
"1","         "
"1"," | "
"1","
"
"1","-------------"
"1","|"
"1","-----------"
"1","|"
"1","-----------"
"1","|"
"1","-----------"
"1","|"
"1","
"
"1","           1"
"1"," | "
"1","        4"
"1"," | "
"1","        6"
"1"," | "
"1","       10"
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    1.024"
"1"," | "
"1","    1.988"
"1"," | "
"1","         "
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    0.400"
"1"," | "
"1","    0.600"
"1"," | "
"1","    0.100"
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    0.061"
"1"," | "
"1","    0.176"
"1"," | "
"1","         "
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    0.040"
"1"," | "
"1","    0.060"
"1"," | "
"1","         "
"1"," | "
"1","
"
"1","-------------"
"1","|"
"1","-----------"
"1","|"
"1","-----------"
"1","|"
"1","-----------"
"1","|"
"1","
"
"1","Column Total"
"1"," | "
"1","       66"
"1"," | "
"1","       34"
"1"," | "
"1","      100"
"1"," | "
"1","
"
"1","            "
"1"," | "
"1","    0.660"
"1"," | "
"1","    0.340"
"1"," | "
"1","         "
"1"," | "
"1","
"
"1","-------------"
"1","|"
"1","-----------"
"1","|"
"1","-----------"
"1","|"
"1","-----------"
"1","|"
"1","
"
"1","
"
"1"," "
"1","
"
